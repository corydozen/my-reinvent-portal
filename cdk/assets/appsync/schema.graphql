type Query {
  getMe: [GetMeReturn]
  getMyGsiFriends: [GetMeReturn]
}

type Mutation {
  savePassword(awsPassword: String): User
  refreshMySessions: [Session]
  updateAlert(updateAlertInput: UpdateAlertInput): Alert
}

schema {
  query: Query
  mutation: Mutation
}

input UpdateAlertInput {
  alertType: String
  updateOrNew: String
  parameters: String
  joinParametersWith: String
}

type GetMeReturn {
  PK: String
  SK: String
  GSI1PK: String
  GSI1SK: String
  email: String
  awsPassword: String

  action: String
  alias: String
  createdAt: Int
  description: String
  duration: Int
  endTime: Long
  isConflicting: String
  isEmbargoed: Boolean
  isFavoritedByMe: Boolean
  isPaidSession: Boolean
  level: String
  location: String
  myReservationStatus: String
  name: String
  sessionId: String
  startTime: Long
  status: String
  type: String
  capacities: String
  customFieldDetails: String
  package: String
  price: String
  room: String
  sessionType: String
  track: String

  alertType: String
  parameters: String
  joinParametersWith: String

  original: Boolean
}

type Friend {
  PK: String
  SK: String
  GSI1PK: String
  GSI1SK: String
  status: String
}

type Alert {
  PK: String
  SK: String
  alertType: String
  parameters: String
  joinParametersWith: String
}

type User {
  PK: String
  SK: String
  email: String
  awsPassword: String
}

type Session {
  PK: String
  SK: String
  action: String
  alias: String
  createdAt: Int
  description: String
  duration: Int
  endTime: Long
  isConflicting: String
  isEmbargoed: Boolean
  isFavoritedByMe: Boolean
  isPaidSession: Boolean
  level: String
  location: String
  myReservationStatus: String
  name: String
  sessionId: String
  startTime: Long
  status: String
  type: String
  capacities: String
  customFieldDetails: String
  package: String
  price: String
  room: String
  sessionType: String
  track: String
}
